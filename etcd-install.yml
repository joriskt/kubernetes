---

- name: Prepare systems for k8s
  hosts: 'etcd'
  remote_user: ansible
  connection: ssh
  become: true
  become_method: sudo
  vars:
    env: 'dev'
    url: 'etcd.{{ kube_env }}.joris.me'

  tasks:

    - name: Update system
      ansible.builtin.apt:
        update_cache: true
        upgrade: true

    - name: Prepare to install k8s apt signing key
      ansible.builtin.apt:
        update_cache: true
        name:
          - ca-certificates
          - curl
          - gpg
          - gpg-agent
        state: present

    - name: Install k8s apt key
      ansible.builtin.get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/google-cloud.asc
        mode: '0600'

    - name: Add k8s apt repository
      ansible.builtin.apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        filename: kubernetes
        state: present
        update_cache: true

    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - etcd-client
          - etcd-server

    - name: Stop etcd if it is running
      ansible.builtin.systemd_service:
        name: etcd
        state: stopped

    - name: Wipe etcd state
      ansible.builtin.file:
        path: /var/lib/etcd/default
        state: absent

    - name: Create etcd override directory
      ansible.builtin.file:
        path: /etc/systemd/system/etcd.service.d
        state: directory

    - name: Collect Tailscale IPv4 address
      ansible.builtin.shell:
        cmd: "tailscale ip --4"
      register: ts_ipv4
      changed_when: false

    - name: Install etcd config template
      ansible.builtin.template:
        src: template/systemd-etcd.conf.j2
        dest: /etc/systemd/system/etcd.service.d/override.conf
        mode: "0600"
      register: conf

    - name: Restart etcd
      ansible.builtin.systemd:
        name: etcd
        state: restarted
        daemon_reload: true
      when: true
